% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_missing_geno.R
\name{filter_missing_geno}
\alias{filter_missing_geno}
\title{Filter Markers or Individuals Based on Missing Genotype Data}
\usage{
filter_missing_geno(
  geno_matrix,
  threshold = 0.1,
  filter_by = c("markers", "individuals")
)
}
\arguments{
\item{geno_matrix}{A numeric matrix where:
\itemize{
\item Rows represent genetic markers.
\item Columns represent individuals.
\item \code{NA} values indicate missing genotype data.
}}

\item{threshold}{Numeric. The maximum \strong{proportion} of missing data allowed before
a marker or individual is removed. Default is \code{0.10} (10\% missing data).}

\item{filter_by}{Character. Specifies whether to filter \code{"markers"} (rows) or
\code{"individuals"} (columns). Must be either of \code{"markers"} or \code{"individuals"}.
Default is \code{"markers"}.}
}
\value{
A list with the following objects:
\itemize{
\item \code{"filtered_geno"}: The genotype matrix after filtering.
\item \code{"pct_missing"}: A named numeric vector containing the missing data
proportions for remaining markers or individuals.
\item \code{"removed_individuals"}: A log of removed individuals (if \code{filter_by = "individuals"}).
\item \code{"removed_markers"}: A log of removed markers (if \code{filter_by = "markers"}).
}
}
\description{
This helper function helps filter a genotype matrix by removing markers or individuals that
exceed a specified threshold. It returns a summary of removed
markers or individuals and the filtered genotype matrix along with
missing data proportions.
}
\details{
\itemize{
\item Ensures the output retains matrix structure.
\item Prints a summary message showing how many markers or individuals were removed.
}
}
\examples{
# Example genotype matrix with missing values
geno_data <- matrix(c(0, 1, NA, 2, 0, 1, NA, 2, NA, NA, 0, 1),
                    nrow = 4, ncol = 3,
                    dimnames = list(c("Marker1", "Marker2", "Marker3", "Marker4"),
                                    c("Ind1", "Ind2", "Ind3")))

# Filter markers with more than 10\% missing data
result_markers <- filter_missing_geno(geno_data, threshold = 0.10, filter_by = "markers")
print(result_markers$filtered_geno)

# Filter individuals with more than 10\% missing data
result_individuals <- filter_missing_geno(geno_data, threshold = 0.10, filter_by = "individuals")
print(result_individuals$filtered_geno)

# Example use
# result <- filter_missing_geno(geno_data, threshold = 0.10, filter_by = "individuals")

# Access output
# filtered_geno <- result$filtered_geno
# missing_values <- result$missing_vector
# removed <- result$removed




}
